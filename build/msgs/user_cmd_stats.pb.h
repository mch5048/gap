// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user_cmd_stats.proto

#ifndef PROTOBUF_user_5fcmd_5fstats_2eproto__INCLUDED
#define PROTOBUF_user_5fcmd_5fstats_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "user_cmd.pb.h"
// @@protoc_insertion_point(includes)

namespace gazebo {
namespace msgs {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_user_5fcmd_5fstats_2eproto();
void protobuf_AssignDesc_user_5fcmd_5fstats_2eproto();
void protobuf_ShutdownFile_user_5fcmd_5fstats_2eproto();

class UserCmdStats;

// ===================================================================

class UserCmdStats : public ::google::protobuf::Message {
 public:
  UserCmdStats();
  virtual ~UserCmdStats();

  UserCmdStats(const UserCmdStats& from);

  inline UserCmdStats& operator=(const UserCmdStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserCmdStats& default_instance();

  void Swap(UserCmdStats* other);

  // implements Message ----------------------------------------------

  UserCmdStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserCmdStats& from);
  void MergeFrom(const UserCmdStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 undo_cmd_count = 1;
  inline bool has_undo_cmd_count() const;
  inline void clear_undo_cmd_count();
  static const int kUndoCmdCountFieldNumber = 1;
  inline ::google::protobuf::uint32 undo_cmd_count() const;
  inline void set_undo_cmd_count(::google::protobuf::uint32 value);

  // required uint32 redo_cmd_count = 2;
  inline bool has_redo_cmd_count() const;
  inline void clear_redo_cmd_count();
  static const int kRedoCmdCountFieldNumber = 2;
  inline ::google::protobuf::uint32 redo_cmd_count() const;
  inline void set_redo_cmd_count(::google::protobuf::uint32 value);

  // repeated .gazebo.msgs.UserCmd undo_cmd = 3;
  inline int undo_cmd_size() const;
  inline void clear_undo_cmd();
  static const int kUndoCmdFieldNumber = 3;
  inline const ::gazebo::msgs::UserCmd& undo_cmd(int index) const;
  inline ::gazebo::msgs::UserCmd* mutable_undo_cmd(int index);
  inline ::gazebo::msgs::UserCmd* add_undo_cmd();
  inline const ::google::protobuf::RepeatedPtrField< ::gazebo::msgs::UserCmd >&
      undo_cmd() const;
  inline ::google::protobuf::RepeatedPtrField< ::gazebo::msgs::UserCmd >*
      mutable_undo_cmd();

  // repeated .gazebo.msgs.UserCmd redo_cmd = 4;
  inline int redo_cmd_size() const;
  inline void clear_redo_cmd();
  static const int kRedoCmdFieldNumber = 4;
  inline const ::gazebo::msgs::UserCmd& redo_cmd(int index) const;
  inline ::gazebo::msgs::UserCmd* mutable_redo_cmd(int index);
  inline ::gazebo::msgs::UserCmd* add_redo_cmd();
  inline const ::google::protobuf::RepeatedPtrField< ::gazebo::msgs::UserCmd >&
      redo_cmd() const;
  inline ::google::protobuf::RepeatedPtrField< ::gazebo::msgs::UserCmd >*
      mutable_redo_cmd();

  // @@protoc_insertion_point(class_scope:gazebo.msgs.UserCmdStats)
 private:
  inline void set_has_undo_cmd_count();
  inline void clear_has_undo_cmd_count();
  inline void set_has_redo_cmd_count();
  inline void clear_has_redo_cmd_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 undo_cmd_count_;
  ::google::protobuf::uint32 redo_cmd_count_;
  ::google::protobuf::RepeatedPtrField< ::gazebo::msgs::UserCmd > undo_cmd_;
  ::google::protobuf::RepeatedPtrField< ::gazebo::msgs::UserCmd > redo_cmd_;
  friend void  protobuf_AddDesc_user_5fcmd_5fstats_2eproto();
  friend void protobuf_AssignDesc_user_5fcmd_5fstats_2eproto();
  friend void protobuf_ShutdownFile_user_5fcmd_5fstats_2eproto();

  void InitAsDefaultInstance();
  static UserCmdStats* default_instance_;
};
// ===================================================================


// ===================================================================

// UserCmdStats

// required uint32 undo_cmd_count = 1;
inline bool UserCmdStats::has_undo_cmd_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserCmdStats::set_has_undo_cmd_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserCmdStats::clear_has_undo_cmd_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserCmdStats::clear_undo_cmd_count() {
  undo_cmd_count_ = 0u;
  clear_has_undo_cmd_count();
}
inline ::google::protobuf::uint32 UserCmdStats::undo_cmd_count() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.UserCmdStats.undo_cmd_count)
  return undo_cmd_count_;
}
inline void UserCmdStats::set_undo_cmd_count(::google::protobuf::uint32 value) {
  set_has_undo_cmd_count();
  undo_cmd_count_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.UserCmdStats.undo_cmd_count)
}

// required uint32 redo_cmd_count = 2;
inline bool UserCmdStats::has_redo_cmd_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserCmdStats::set_has_redo_cmd_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserCmdStats::clear_has_redo_cmd_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserCmdStats::clear_redo_cmd_count() {
  redo_cmd_count_ = 0u;
  clear_has_redo_cmd_count();
}
inline ::google::protobuf::uint32 UserCmdStats::redo_cmd_count() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.UserCmdStats.redo_cmd_count)
  return redo_cmd_count_;
}
inline void UserCmdStats::set_redo_cmd_count(::google::protobuf::uint32 value) {
  set_has_redo_cmd_count();
  redo_cmd_count_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.UserCmdStats.redo_cmd_count)
}

// repeated .gazebo.msgs.UserCmd undo_cmd = 3;
inline int UserCmdStats::undo_cmd_size() const {
  return undo_cmd_.size();
}
inline void UserCmdStats::clear_undo_cmd() {
  undo_cmd_.Clear();
}
inline const ::gazebo::msgs::UserCmd& UserCmdStats::undo_cmd(int index) const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.UserCmdStats.undo_cmd)
  return undo_cmd_.Get(index);
}
inline ::gazebo::msgs::UserCmd* UserCmdStats::mutable_undo_cmd(int index) {
  // @@protoc_insertion_point(field_mutable:gazebo.msgs.UserCmdStats.undo_cmd)
  return undo_cmd_.Mutable(index);
}
inline ::gazebo::msgs::UserCmd* UserCmdStats::add_undo_cmd() {
  // @@protoc_insertion_point(field_add:gazebo.msgs.UserCmdStats.undo_cmd)
  return undo_cmd_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gazebo::msgs::UserCmd >&
UserCmdStats::undo_cmd() const {
  // @@protoc_insertion_point(field_list:gazebo.msgs.UserCmdStats.undo_cmd)
  return undo_cmd_;
}
inline ::google::protobuf::RepeatedPtrField< ::gazebo::msgs::UserCmd >*
UserCmdStats::mutable_undo_cmd() {
  // @@protoc_insertion_point(field_mutable_list:gazebo.msgs.UserCmdStats.undo_cmd)
  return &undo_cmd_;
}

// repeated .gazebo.msgs.UserCmd redo_cmd = 4;
inline int UserCmdStats::redo_cmd_size() const {
  return redo_cmd_.size();
}
inline void UserCmdStats::clear_redo_cmd() {
  redo_cmd_.Clear();
}
inline const ::gazebo::msgs::UserCmd& UserCmdStats::redo_cmd(int index) const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.UserCmdStats.redo_cmd)
  return redo_cmd_.Get(index);
}
inline ::gazebo::msgs::UserCmd* UserCmdStats::mutable_redo_cmd(int index) {
  // @@protoc_insertion_point(field_mutable:gazebo.msgs.UserCmdStats.redo_cmd)
  return redo_cmd_.Mutable(index);
}
inline ::gazebo::msgs::UserCmd* UserCmdStats::add_redo_cmd() {
  // @@protoc_insertion_point(field_add:gazebo.msgs.UserCmdStats.redo_cmd)
  return redo_cmd_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gazebo::msgs::UserCmd >&
UserCmdStats::redo_cmd() const {
  // @@protoc_insertion_point(field_list:gazebo.msgs.UserCmdStats.redo_cmd)
  return redo_cmd_;
}
inline ::google::protobuf::RepeatedPtrField< ::gazebo::msgs::UserCmd >*
UserCmdStats::mutable_redo_cmd() {
  // @@protoc_insertion_point(field_mutable_list:gazebo.msgs.UserCmdStats.redo_cmd)
  return &redo_cmd_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace gazebo

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_user_5fcmd_5fstats_2eproto__INCLUDED
