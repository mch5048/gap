// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: world_utils_response.proto

#ifndef PROTOBUF_world_5futils_5fresponse_2eproto__INCLUDED
#define PROTOBUF_world_5futils_5fresponse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace gap {
namespace msgs {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_world_5futils_5fresponse_2eproto();
void protobuf_AssignDesc_world_5futils_5fresponse_2eproto();
void protobuf_ShutdownFile_world_5futils_5fresponse_2eproto();

class WorldUtilsResponse;

enum WorldUtilsResponse_Type {
  WorldUtilsResponse_Type_INFO = 1,
  WorldUtilsResponse_Type_SUCCESS = 2
};
bool WorldUtilsResponse_Type_IsValid(int value);
const WorldUtilsResponse_Type WorldUtilsResponse_Type_Type_MIN = WorldUtilsResponse_Type_INFO;
const WorldUtilsResponse_Type WorldUtilsResponse_Type_Type_MAX = WorldUtilsResponse_Type_SUCCESS;
const int WorldUtilsResponse_Type_Type_ARRAYSIZE = WorldUtilsResponse_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorldUtilsResponse_Type_descriptor();
inline const ::std::string& WorldUtilsResponse_Type_Name(WorldUtilsResponse_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorldUtilsResponse_Type_descriptor(), value);
}
inline bool WorldUtilsResponse_Type_Parse(
    const ::std::string& name, WorldUtilsResponse_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorldUtilsResponse_Type>(
    WorldUtilsResponse_Type_descriptor(), name, value);
}
// ===================================================================

class WorldUtilsResponse : public ::google::protobuf::Message {
 public:
  WorldUtilsResponse();
  virtual ~WorldUtilsResponse();

  WorldUtilsResponse(const WorldUtilsResponse& from);

  inline WorldUtilsResponse& operator=(const WorldUtilsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldUtilsResponse& default_instance();

  void Swap(WorldUtilsResponse* other);

  // implements Message ----------------------------------------------

  WorldUtilsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldUtilsResponse& from);
  void MergeFrom(const WorldUtilsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef WorldUtilsResponse_Type Type;
  static const Type INFO = WorldUtilsResponse_Type_INFO;
  static const Type SUCCESS = WorldUtilsResponse_Type_SUCCESS;
  static inline bool Type_IsValid(int value) {
    return WorldUtilsResponse_Type_IsValid(value);
  }
  static const Type Type_MIN =
    WorldUtilsResponse_Type_Type_MIN;
  static const Type Type_MAX =
    WorldUtilsResponse_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    WorldUtilsResponse_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return WorldUtilsResponse_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return WorldUtilsResponse_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return WorldUtilsResponse_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .gap.msgs.WorldUtilsResponse.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::gap::msgs::WorldUtilsResponse_Type type() const;
  inline void set_type(::gap::msgs::WorldUtilsResponse_Type value);

  // optional int32 object_count = 2;
  inline bool has_object_count() const;
  inline void clear_object_count();
  static const int kObjectCountFieldNumber = 2;
  inline ::google::protobuf::int32 object_count() const;
  inline void set_object_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gap.msgs.WorldUtilsResponse)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_object_count();
  inline void clear_has_object_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::int32 object_count_;
  friend void  protobuf_AddDesc_world_5futils_5fresponse_2eproto();
  friend void protobuf_AssignDesc_world_5futils_5fresponse_2eproto();
  friend void protobuf_ShutdownFile_world_5futils_5fresponse_2eproto();

  void InitAsDefaultInstance();
  static WorldUtilsResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// WorldUtilsResponse

// optional .gap.msgs.WorldUtilsResponse.Type type = 1;
inline bool WorldUtilsResponse::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldUtilsResponse::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldUtilsResponse::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldUtilsResponse::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::gap::msgs::WorldUtilsResponse_Type WorldUtilsResponse::type() const {
  // @@protoc_insertion_point(field_get:gap.msgs.WorldUtilsResponse.type)
  return static_cast< ::gap::msgs::WorldUtilsResponse_Type >(type_);
}
inline void WorldUtilsResponse::set_type(::gap::msgs::WorldUtilsResponse_Type value) {
  assert(::gap::msgs::WorldUtilsResponse_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:gap.msgs.WorldUtilsResponse.type)
}

// optional int32 object_count = 2;
inline bool WorldUtilsResponse::has_object_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldUtilsResponse::set_has_object_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldUtilsResponse::clear_has_object_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldUtilsResponse::clear_object_count() {
  object_count_ = 0;
  clear_has_object_count();
}
inline ::google::protobuf::int32 WorldUtilsResponse::object_count() const {
  // @@protoc_insertion_point(field_get:gap.msgs.WorldUtilsResponse.object_count)
  return object_count_;
}
inline void WorldUtilsResponse::set_object_count(::google::protobuf::int32 value) {
  set_has_object_count();
  object_count_ = value;
  // @@protoc_insertion_point(field_set:gap.msgs.WorldUtilsResponse.object_count)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace gap

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::gap::msgs::WorldUtilsResponse_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gap::msgs::WorldUtilsResponse_Type>() {
  return ::gap::msgs::WorldUtilsResponse_Type_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_world_5futils_5fresponse_2eproto__INCLUDED
