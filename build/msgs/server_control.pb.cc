// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_control.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "server_control.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace gazebo {
namespace msgs {

namespace {

const ::google::protobuf::Descriptor* ServerControl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerControl_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_server_5fcontrol_2eproto() {
  protobuf_AddDesc_server_5fcontrol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "server_control.proto");
  GOOGLE_CHECK(file != NULL);
  ServerControl_descriptor_ = file->message_type(0);
  static const int ServerControl_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerControl, save_world_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerControl, save_filename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerControl, open_filename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerControl, new_world_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerControl, stop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerControl, clone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerControl, new_port_),
  };
  ServerControl_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServerControl_descriptor_,
      ServerControl::default_instance_,
      ServerControl_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerControl, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerControl, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServerControl));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_server_5fcontrol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServerControl_descriptor_, &ServerControl::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_server_5fcontrol_2eproto() {
  delete ServerControl::default_instance_;
  delete ServerControl_reflection_;
}

void protobuf_AddDesc_server_5fcontrol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024server_control.proto\022\013gazebo.msgs\"\230\001\n\r"
    "ServerControl\022\027\n\017save_world_name\030\001 \001(\t\022\025"
    "\n\rsave_filename\030\002 \001(\t\022\025\n\ropen_filename\030\003"
    " \001(\t\022\021\n\tnew_world\030\004 \001(\010\022\014\n\004stop\030\005 \001(\010\022\r\n"
    "\005clone\030\006 \001(\010\022\020\n\010new_port\030\007 \001(\r", 190);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server_control.proto", &protobuf_RegisterTypes);
  ServerControl::default_instance_ = new ServerControl();
  ServerControl::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_server_5fcontrol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_server_5fcontrol_2eproto {
  StaticDescriptorInitializer_server_5fcontrol_2eproto() {
    protobuf_AddDesc_server_5fcontrol_2eproto();
  }
} static_descriptor_initializer_server_5fcontrol_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ServerControl::kSaveWorldNameFieldNumber;
const int ServerControl::kSaveFilenameFieldNumber;
const int ServerControl::kOpenFilenameFieldNumber;
const int ServerControl::kNewWorldFieldNumber;
const int ServerControl::kStopFieldNumber;
const int ServerControl::kCloneFieldNumber;
const int ServerControl::kNewPortFieldNumber;
#endif  // !_MSC_VER

ServerControl::ServerControl()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gazebo.msgs.ServerControl)
}

void ServerControl::InitAsDefaultInstance() {
}

ServerControl::ServerControl(const ServerControl& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gazebo.msgs.ServerControl)
}

void ServerControl::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  save_world_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  save_filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  open_filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_world_ = false;
  stop_ = false;
  clone_ = false;
  new_port_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerControl::~ServerControl() {
  // @@protoc_insertion_point(destructor:gazebo.msgs.ServerControl)
  SharedDtor();
}

void ServerControl::SharedDtor() {
  if (save_world_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete save_world_name_;
  }
  if (save_filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete save_filename_;
  }
  if (open_filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete open_filename_;
  }
  if (this != default_instance_) {
  }
}

void ServerControl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerControl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerControl_descriptor_;
}

const ServerControl& ServerControl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fcontrol_2eproto();
  return *default_instance_;
}

ServerControl* ServerControl::default_instance_ = NULL;

ServerControl* ServerControl::New() const {
  return new ServerControl;
}

void ServerControl::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ServerControl*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(new_world_, new_port_);
    if (has_save_world_name()) {
      if (save_world_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        save_world_name_->clear();
      }
    }
    if (has_save_filename()) {
      if (save_filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        save_filename_->clear();
      }
    }
    if (has_open_filename()) {
      if (open_filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        open_filename_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServerControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gazebo.msgs.ServerControl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string save_world_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_save_world_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->save_world_name().data(), this->save_world_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "save_world_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_save_filename;
        break;
      }

      // optional string save_filename = 2;
      case 2: {
        if (tag == 18) {
         parse_save_filename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_save_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->save_filename().data(), this->save_filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "save_filename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_open_filename;
        break;
      }

      // optional string open_filename = 3;
      case 3: {
        if (tag == 26) {
         parse_open_filename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_open_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->open_filename().data(), this->open_filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "open_filename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_new_world;
        break;
      }

      // optional bool new_world = 4;
      case 4: {
        if (tag == 32) {
         parse_new_world:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &new_world_)));
          set_has_new_world();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_stop;
        break;
      }

      // optional bool stop = 5;
      case 5: {
        if (tag == 40) {
         parse_stop:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stop_)));
          set_has_stop();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_clone;
        break;
      }

      // optional bool clone = 6;
      case 6: {
        if (tag == 48) {
         parse_clone:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &clone_)));
          set_has_clone();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_new_port;
        break;
      }

      // optional uint32 new_port = 7;
      case 7: {
        if (tag == 56) {
         parse_new_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &new_port_)));
          set_has_new_port();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gazebo.msgs.ServerControl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gazebo.msgs.ServerControl)
  return false;
#undef DO_
}

void ServerControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gazebo.msgs.ServerControl)
  // optional string save_world_name = 1;
  if (has_save_world_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->save_world_name().data(), this->save_world_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "save_world_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->save_world_name(), output);
  }

  // optional string save_filename = 2;
  if (has_save_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->save_filename().data(), this->save_filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "save_filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->save_filename(), output);
  }

  // optional string open_filename = 3;
  if (has_open_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->open_filename().data(), this->open_filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "open_filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->open_filename(), output);
  }

  // optional bool new_world = 4;
  if (has_new_world()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->new_world(), output);
  }

  // optional bool stop = 5;
  if (has_stop()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->stop(), output);
  }

  // optional bool clone = 6;
  if (has_clone()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->clone(), output);
  }

  // optional uint32 new_port = 7;
  if (has_new_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->new_port(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gazebo.msgs.ServerControl)
}

::google::protobuf::uint8* ServerControl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gazebo.msgs.ServerControl)
  // optional string save_world_name = 1;
  if (has_save_world_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->save_world_name().data(), this->save_world_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "save_world_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->save_world_name(), target);
  }

  // optional string save_filename = 2;
  if (has_save_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->save_filename().data(), this->save_filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "save_filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->save_filename(), target);
  }

  // optional string open_filename = 3;
  if (has_open_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->open_filename().data(), this->open_filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "open_filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->open_filename(), target);
  }

  // optional bool new_world = 4;
  if (has_new_world()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->new_world(), target);
  }

  // optional bool stop = 5;
  if (has_stop()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->stop(), target);
  }

  // optional bool clone = 6;
  if (has_clone()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->clone(), target);
  }

  // optional uint32 new_port = 7;
  if (has_new_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->new_port(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gazebo.msgs.ServerControl)
  return target;
}

int ServerControl::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string save_world_name = 1;
    if (has_save_world_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->save_world_name());
    }

    // optional string save_filename = 2;
    if (has_save_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->save_filename());
    }

    // optional string open_filename = 3;
    if (has_open_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->open_filename());
    }

    // optional bool new_world = 4;
    if (has_new_world()) {
      total_size += 1 + 1;
    }

    // optional bool stop = 5;
    if (has_stop()) {
      total_size += 1 + 1;
    }

    // optional bool clone = 6;
    if (has_clone()) {
      total_size += 1 + 1;
    }

    // optional uint32 new_port = 7;
    if (has_new_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->new_port());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerControl::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServerControl* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServerControl*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServerControl::MergeFrom(const ServerControl& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_save_world_name()) {
      set_save_world_name(from.save_world_name());
    }
    if (from.has_save_filename()) {
      set_save_filename(from.save_filename());
    }
    if (from.has_open_filename()) {
      set_open_filename(from.open_filename());
    }
    if (from.has_new_world()) {
      set_new_world(from.new_world());
    }
    if (from.has_stop()) {
      set_stop(from.stop());
    }
    if (from.has_clone()) {
      set_clone(from.clone());
    }
    if (from.has_new_port()) {
      set_new_port(from.new_port());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServerControl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerControl::CopyFrom(const ServerControl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerControl::IsInitialized() const {

  return true;
}

void ServerControl::Swap(ServerControl* other) {
  if (other != this) {
    std::swap(save_world_name_, other->save_world_name_);
    std::swap(save_filename_, other->save_filename_);
    std::swap(open_filename_, other->open_filename_);
    std::swap(new_world_, other->new_world_);
    std::swap(stop_, other->stop_);
    std::swap(clone_, other->clone_);
    std::swap(new_port_, other->new_port_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ServerControl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerControl_descriptor_;
  metadata.reflection = ServerControl_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace gazebo

// @@protoc_insertion_point(global_scope)
