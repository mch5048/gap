// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: visual_utils_request.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "visual_utils_request.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace gap {
namespace msgs {

namespace {

const ::google::protobuf::Descriptor* VisualUtilsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VisualUtilsRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* VisualUtilsRequest_Type_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_visual_5futils_5frequest_2eproto() {
  protobuf_AddDesc_visual_5futils_5frequest_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "visual_utils_request.proto");
  GOOGLE_CHECK(file != NULL);
  VisualUtilsRequest_descriptor_ = file->message_type(0);
  static const int VisualUtilsRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VisualUtilsRequest, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VisualUtilsRequest, targets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VisualUtilsRequest, poses_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VisualUtilsRequest, scale_),
  };
  VisualUtilsRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      VisualUtilsRequest_descriptor_,
      VisualUtilsRequest::default_instance_,
      VisualUtilsRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VisualUtilsRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VisualUtilsRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(VisualUtilsRequest));
  VisualUtilsRequest_Type_descriptor_ = VisualUtilsRequest_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_visual_5futils_5frequest_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    VisualUtilsRequest_descriptor_, &VisualUtilsRequest::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_visual_5futils_5frequest_2eproto() {
  delete VisualUtilsRequest::default_instance_;
  delete VisualUtilsRequest_reflection_;
}

void protobuf_AddDesc_visual_5futils_5frequest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::gazebo::msgs::protobuf_AddDesc_pose_2eproto();
  ::gazebo::msgs::protobuf_AddDesc_vector3d_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032visual_utils_request.proto\022\010gap.msgs\032\n"
    "pose.proto\032\016vector3d.proto\"\304\001\n\022VisualUti"
    "lsRequest\022/\n\004type\030\001 \001(\0162!.gap.msgs.Visua"
    "lUtilsRequest.Type\022\017\n\007targets\030\002 \003(\t\022 \n\005p"
    "oses\030\003 \003(\0132\021.gazebo.msgs.Pose\022$\n\005scale\030\004"
    " \003(\0132\025.gazebo.msgs.Vector3d\"$\n\004Type\022\n\n\006U"
    "PDATE\020\001\022\020\n\014DEFAULT_POSE\020\002", 265);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "visual_utils_request.proto", &protobuf_RegisterTypes);
  VisualUtilsRequest::default_instance_ = new VisualUtilsRequest();
  VisualUtilsRequest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_visual_5futils_5frequest_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_visual_5futils_5frequest_2eproto {
  StaticDescriptorInitializer_visual_5futils_5frequest_2eproto() {
    protobuf_AddDesc_visual_5futils_5frequest_2eproto();
  }
} static_descriptor_initializer_visual_5futils_5frequest_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* VisualUtilsRequest_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VisualUtilsRequest_Type_descriptor_;
}
bool VisualUtilsRequest_Type_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const VisualUtilsRequest_Type VisualUtilsRequest::UPDATE;
const VisualUtilsRequest_Type VisualUtilsRequest::DEFAULT_POSE;
const VisualUtilsRequest_Type VisualUtilsRequest::Type_MIN;
const VisualUtilsRequest_Type VisualUtilsRequest::Type_MAX;
const int VisualUtilsRequest::Type_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int VisualUtilsRequest::kTypeFieldNumber;
const int VisualUtilsRequest::kTargetsFieldNumber;
const int VisualUtilsRequest::kPosesFieldNumber;
const int VisualUtilsRequest::kScaleFieldNumber;
#endif  // !_MSC_VER

VisualUtilsRequest::VisualUtilsRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gap.msgs.VisualUtilsRequest)
}

void VisualUtilsRequest::InitAsDefaultInstance() {
}

VisualUtilsRequest::VisualUtilsRequest(const VisualUtilsRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gap.msgs.VisualUtilsRequest)
}

void VisualUtilsRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

VisualUtilsRequest::~VisualUtilsRequest() {
  // @@protoc_insertion_point(destructor:gap.msgs.VisualUtilsRequest)
  SharedDtor();
}

void VisualUtilsRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void VisualUtilsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VisualUtilsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VisualUtilsRequest_descriptor_;
}

const VisualUtilsRequest& VisualUtilsRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_visual_5futils_5frequest_2eproto();
  return *default_instance_;
}

VisualUtilsRequest* VisualUtilsRequest::default_instance_ = NULL;

VisualUtilsRequest* VisualUtilsRequest::New() const {
  return new VisualUtilsRequest;
}

void VisualUtilsRequest::Clear() {
  type_ = 1;
  targets_.Clear();
  poses_.Clear();
  scale_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool VisualUtilsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gap.msgs.VisualUtilsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .gap.msgs.VisualUtilsRequest.Type type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::gap::msgs::VisualUtilsRequest_Type_IsValid(value)) {
            set_type(static_cast< ::gap::msgs::VisualUtilsRequest_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_targets;
        break;
      }

      // repeated string targets = 2;
      case 2: {
        if (tag == 18) {
         parse_targets:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_targets()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->targets(this->targets_size() - 1).data(),
            this->targets(this->targets_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "targets");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_targets;
        if (input->ExpectTag(26)) goto parse_poses;
        break;
      }

      // repeated .gazebo.msgs.Pose poses = 3;
      case 3: {
        if (tag == 26) {
         parse_poses:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_poses()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_poses;
        if (input->ExpectTag(34)) goto parse_scale;
        break;
      }

      // repeated .gazebo.msgs.Vector3d scale = 4;
      case 4: {
        if (tag == 34) {
         parse_scale:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_scale()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_scale;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gap.msgs.VisualUtilsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gap.msgs.VisualUtilsRequest)
  return false;
#undef DO_
}

void VisualUtilsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gap.msgs.VisualUtilsRequest)
  // optional .gap.msgs.VisualUtilsRequest.Type type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // repeated string targets = 2;
  for (int i = 0; i < this->targets_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->targets(i).data(), this->targets(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "targets");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->targets(i), output);
  }

  // repeated .gazebo.msgs.Pose poses = 3;
  for (int i = 0; i < this->poses_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->poses(i), output);
  }

  // repeated .gazebo.msgs.Vector3d scale = 4;
  for (int i = 0; i < this->scale_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->scale(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gap.msgs.VisualUtilsRequest)
}

::google::protobuf::uint8* VisualUtilsRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gap.msgs.VisualUtilsRequest)
  // optional .gap.msgs.VisualUtilsRequest.Type type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // repeated string targets = 2;
  for (int i = 0; i < this->targets_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->targets(i).data(), this->targets(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "targets");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->targets(i), target);
  }

  // repeated .gazebo.msgs.Pose poses = 3;
  for (int i = 0; i < this->poses_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->poses(i), target);
  }

  // repeated .gazebo.msgs.Vector3d scale = 4;
  for (int i = 0; i < this->scale_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->scale(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gap.msgs.VisualUtilsRequest)
  return target;
}

int VisualUtilsRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .gap.msgs.VisualUtilsRequest.Type type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  // repeated string targets = 2;
  total_size += 1 * this->targets_size();
  for (int i = 0; i < this->targets_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->targets(i));
  }

  // repeated .gazebo.msgs.Pose poses = 3;
  total_size += 1 * this->poses_size();
  for (int i = 0; i < this->poses_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->poses(i));
  }

  // repeated .gazebo.msgs.Vector3d scale = 4;
  total_size += 1 * this->scale_size();
  for (int i = 0; i < this->scale_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->scale(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VisualUtilsRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const VisualUtilsRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const VisualUtilsRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void VisualUtilsRequest::MergeFrom(const VisualUtilsRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  targets_.MergeFrom(from.targets_);
  poses_.MergeFrom(from.poses_);
  scale_.MergeFrom(from.scale_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void VisualUtilsRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VisualUtilsRequest::CopyFrom(const VisualUtilsRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VisualUtilsRequest::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->poses())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->scale())) return false;
  return true;
}

void VisualUtilsRequest::Swap(VisualUtilsRequest* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    targets_.Swap(&other->targets_);
    poses_.Swap(&other->poses_);
    scale_.Swap(&other->scale_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata VisualUtilsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VisualUtilsRequest_descriptor_;
  metadata.reflection = VisualUtilsRequest_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace gap

// @@protoc_insertion_point(global_scope)
